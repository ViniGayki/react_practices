{"ast":null,"code":"var _jsxFileName = \"D:\\\\practice_react\\\\React_file\\\\validation_form\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [fname, setFname] = useState('');\n  const [isnameValid, setIsnameValid] = useState(true);\n  const [isformValid, setisformValid] = useState(false);\n\n  // for data show used\n  useEffect(() => {\n    if (isformValid === '') {\n      setisformValid(true);\n    } else {\n      setisformValid(false);\n    }\n  }, []);\n\n  // used to the submite button operation \n  const submitform = e => {\n    e.preventDefault();\n    if (fname === '') {\n      setIsnameValid(false);\n    }\n    console.log('Insid  form submmit');\n  };\n\n  //Remove the inputbax text then check the validaton\n  const onchangefnamehandaler = e => {\n    setFname(e.target.value);\n    if (e.target.value === '') {\n      setIsnameValid(false);\n    }\n  };\n\n  // out of input box click then show error check the validation\n  const blurfnamehandaler = () => {\n    if (fname === '') {\n      setIsnameValid(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    action: \"\",\n    onSubmit: submitform,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: !isnameValid ? 'form-control invalid' : 'form-control',\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"From with validation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"fname\",\n        value: fname,\n        onChange: onchangefnamehandaler,\n        onBlur: blurfnamehandaler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), !isnameValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: !isnameValid ? 'error-text' : '',\n        children: \"Name is not valide\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !isformValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MJkCjEv0XtVvSZUrjDotmIYDYws=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","fname","setFname","isnameValid","setIsnameValid","isformValid","setisformValid","submitform","e","preventDefault","console","log","onchangefnamehandaler","target","value","blurfnamehandaler","action","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","name","onChange","onBlur","disabled","_c","$RefreshReg$"],"sources":["D:/practice_react/React_file/validation_form/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './index.css';\nfunction App() {\n  const [fname, setFname] = useState('');\n  const [isnameValid, setIsnameValid] = useState(true);\n  const [isformValid,setisformValid]= useState(false);\n  \n\n  // for data show used\n  useEffect(() => {\n    if (isformValid === '') {\n      setisformValid(true);\n\n    }else{\n      setisformValid(false);\n    }\n  }, []);\n\n\n  // used to the submite button operation \n  const submitform = (e) => {\n    e.preventDefault();\n    if (fname === '') {\n      setIsnameValid(false);\n\n    }\n    console.log('Insid  form submmit');\n  }\n\n//Remove the inputbax text then check the validaton\n  const onchangefnamehandaler=(e)=>{\n    setFname(e.target.value)\n    if (e.target.value === '') {\n      setIsnameValid(false);\n}\n  }\n\n// out of input box click then show error check the validation\n  const blurfnamehandaler = () => {\n    if (fname === '') {\n      setIsnameValid(false);\n\n    }\n  }\n\n  return (\n    <form action='' onSubmit={submitform}>\n      <div className={!isnameValid ? 'form-control invalid' : 'form-control'}>\n        <h1>From with validation</h1>\n\n        <input type='text' name='fname' value={fname} onChange={onchangefnamehandaler} onBlur={blurfnamehandaler } />\n\n        {!isnameValid && <p className={!isnameValid ? 'error-text' : ''}>Name is not valide</p>}\n\n        <button disabled={!isformValid}>Submit</button>\n\n      </div> \n    </form>\n  );\n}\n \nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACrB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACO,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACS,WAAW,EAACC,cAAc,CAAC,GAAEV,QAAQ,CAAC,KAAK,CAAC;;EAGnD;EACAD,SAAS,CAAC,MAAM;IACd,IAAIU,WAAW,KAAK,EAAE,EAAE;MACtBC,cAAc,CAAC,IAAI,CAAC;IAEtB,CAAC,MAAI;MACHA,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC,EAAE,EAAE,CAAC;;EAGN;EACA,MAAMC,UAAU,GAAIC,CAAC,IAAK;IACxBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIR,KAAK,KAAK,EAAE,EAAE;MAChBG,cAAc,CAAC,KAAK,CAAC;IAEvB;IACAM,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;EACpC,CAAC;;EAEH;EACE,MAAMC,qBAAqB,GAAEJ,CAAC,IAAG;IAC/BN,QAAQ,CAACM,CAAC,CAACK,MAAM,CAACC,KAAK,CAAC;IACxB,IAAIN,CAAC,CAACK,MAAM,CAACC,KAAK,KAAK,EAAE,EAAE;MACzBV,cAAc,CAAC,KAAK,CAAC;IAC3B;EACE,CAAC;;EAEH;EACE,MAAMW,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAId,KAAK,KAAK,EAAE,EAAE;MAChBG,cAAc,CAAC,KAAK,CAAC;IAEvB;EACF,CAAC;EAED,oBACEN,OAAA;IAAMkB,MAAM,EAAC,EAAE;IAACC,QAAQ,EAAEV,UAAW;IAAAW,QAAA,eACnCpB,OAAA;MAAKqB,SAAS,EAAE,CAAChB,WAAW,GAAG,sBAAsB,GAAG,cAAe;MAAAe,QAAA,gBACrEpB,OAAA;QAAAoB,QAAA,EAAI;MAAoB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE7BzB,OAAA;QAAO0B,IAAI,EAAC,MAAM;QAACC,IAAI,EAAC,OAAO;QAACX,KAAK,EAAEb,KAAM;QAACyB,QAAQ,EAAEd,qBAAsB;QAACe,MAAM,EAAEZ;MAAmB;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAE5G,CAACpB,WAAW,iBAAIL,OAAA;QAAGqB,SAAS,EAAE,CAAChB,WAAW,GAAG,YAAY,GAAG,EAAG;QAAAe,QAAA,EAAC;MAAkB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAEvFzB,OAAA;QAAQ8B,QAAQ,EAAE,CAACvB,WAAY;QAAAa,QAAA,EAAC;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX;AAACvB,EAAA,CAzDQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AA2DZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}