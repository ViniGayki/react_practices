{"ast":null,"code":"var _jsxFileName = \"D:\\\\practice_react\\\\React_file\\\\crudoperation\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [addproduct, setAddproduct] = useState();\n  const [addnewproduct, setAddnewproduct] = useState(['']);\n\n  // const submitform = () => {\n  //  setAddnewproduct((prevState) => {\n  //  return [...prevState, addproduct];\n  //   })\n  // };\n\n  // Optional code\n\n  const submitform = () => {\n    if (addnewproduct.trim() !== '') {\n      setAddproduct([...addproduct, addnewproduct]);\n      setAddnewproduct('');\n    }\n  };\n  const handleAddTodo = () => {\n    // if (newTodo.trim() !== '') {\n    //   setTodos([...todos, newTodo]);\n    //   setNewTodo('');\n    // }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Details_of Product_Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      onChange: e => setAddproduct(e.target.value),\n      placeholder: \"Enter the product :-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: submitform,\n      children: \"Submit Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: addnewproduct.map(index => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"i1AZveDD+DV0Ku3rXCwsoKvVyl0=\");\n_c = App;\n;\nexport default App;\n\n// import React, { useState } from 'react';\n\n// function TodoList() {\n//   const [todos, setTodos] = useState([]);\n//   const [newTodo, setNewTodo] = useState('');\n\n//   const handleInputChange = (e) => {\n//     setNewTodo(e.target.value);\n//   };\n\n//   const handleAddTodo = () => {\n//     if (newTodo.trim() !== '') {\n//       setTodos([...todos, newTodo]);\n//       setNewTodo('');\n//     }\n//   };\n\n//   const handleDeleteTodo = (index) => {\n//     const updatedTodos = [...todos];\n//     updatedTodos.splice(index, 1);\n//     setTodos(updatedTodos);\n//   };\n\n//   return (\n//     <div>\n//       <h2>Todo List</h2>\n//      <input type=\"text\" onChange={handleInputChange} placeholder=\"Enter the product :-\" />\n//       <button onClick={handleAddTodo}>Add</button>\n\n//       <ul>\n//         {todos.map((todo, index) => (\n//           <li key={index}>\n//             {todo}\n//             <button onClick={() => handleDeleteTodo(index)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default TodoList;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","addproduct","setAddproduct","addnewproduct","setAddnewproduct","submitform","trim","handleAddTodo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","e","target","value","placeholder","onClick","map","index","_c","$RefreshReg$"],"sources":["D:/practice_react/React_file/crudoperation/src/App.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\n\nfunction App() {\n  const [addproduct, setAddproduct] = useState();\n  const [addnewproduct, setAddnewproduct] = useState(['']);\n\n\n  // const submitform = () => {\n //  setAddnewproduct((prevState) => {\n  //  return [...prevState, addproduct];\n  //   })\n  // };\n\n  // Optional code\n\n  const submitform = () => {\n    if (addnewproduct.trim() !== '') {\n      setAddproduct([...addproduct, addnewproduct]);\n      setAddnewproduct('');\n    }\n  };\n\n\n\n\n\n\n\n\n\n\n\n  const handleAddTodo = () => {\n    // if (newTodo.trim() !== '') {\n    //   setTodos([...todos, newTodo]);\n    //   setNewTodo('');\n    // }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Details_of Product_Form</h1>\n\n      <input type=\"text\" onChange={(e) => setAddproduct(e.target.value)} placeholder=\"Enter the product :-\" />\n\n      <button onClick={submitform}>Submit Data</button>\n\n{/* \n      <button onClick={() => {\n        setAddnewproduct((prevState) => {\n          return [...prevState, addproduct];\n        })\n      }}> Click Me</button> */}\n\n\n      <ul>\n        {\n          addnewproduct.map((index) => {\n            return (\n              <>\n                <li>{index}</li>\n              </>\n            )\n          }\n          )}\n      </ul>\n\n\n\n    </div>\n  );\n};\n\nexport default App;\n\n\n\n// import React, { useState } from 'react';\n\n// function TodoList() {\n//   const [todos, setTodos] = useState([]);\n//   const [newTodo, setNewTodo] = useState('');\n\n//   const handleInputChange = (e) => {\n//     setNewTodo(e.target.value);\n//   };\n\n//   const handleAddTodo = () => {\n//     if (newTodo.trim() !== '') {\n//       setTodos([...todos, newTodo]);\n//       setNewTodo('');\n//     }\n//   };\n\n//   const handleDeleteTodo = (index) => {\n//     const updatedTodos = [...todos];\n//     updatedTodos.splice(index, 1);\n//     setTodos(updatedTodos);\n//   };\n\n//   return (\n//     <div>\n//       <h2>Todo List</h2>\n//      <input type=\"text\" onChange={handleInputChange} placeholder=\"Enter the product :-\" />\n//       <button onClick={handleAddTodo}>Add</button>\n\n\n//       <ul>\n//         {todos.map((todo, index) => (\n//           <li key={index}>\n//             {todo}\n//             <button onClick={() => handleDeleteTodo(index)}>Delete</button>\n//           </li>\n//         ))}\n//       </ul>\n//     </div>\n//   );\n// }\n\n// export default TodoList;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAC9C,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;;EAGxD;EACD;EACC;EACA;EACA;;EAEA;;EAEA,MAAMW,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIF,aAAa,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC/BJ,aAAa,CAAC,CAAC,GAAGD,UAAU,EAAEE,aAAa,CAAC,CAAC;MAC7CC,gBAAgB,CAAC,EAAE,CAAC;IACtB;EACF,CAAC;EAYD,MAAMG,aAAa,GAAGA,CAAA,KAAM;IAC1B;IACA;IACA;IACA;EAAA,CACD;EAED,oBACEX,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBb,OAAA;MAAAa,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEhCjB,OAAA;MAAOkB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAGC,CAAC,IAAKd,aAAa,CAACc,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;MAACC,WAAW,EAAC;IAAsB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAExGjB,OAAA;MAAQwB,OAAO,EAAEf,UAAW;MAAAI,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAUjDjB,OAAA;MAAAa,QAAA,EAEIN,aAAa,CAACkB,GAAG,CAAEC,KAAK,IAAK;QAC3B,oBACE1B,OAAA,CAAAE,SAAA;UAAAW,QAAA,eACEb,OAAA;YAAAa,QAAA,EAAKa;UAAK;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC,gBAChB,CAAC;MAEP,CACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIF,CAAC;AAEV;AAACb,EAAA,CArEQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAqEX;AAED,eAAeA,GAAG;;AAIlB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}